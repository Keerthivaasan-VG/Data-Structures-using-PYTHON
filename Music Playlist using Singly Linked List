class SongNode:
    def __init__(self, title):
        self.title = title
        self.next = None

class MusicPlaylist:
    def __init__(self):
        self.head = None
        self.current = None

    def get_length(self):
        temp, count = self.head, 0
        while temp:
            count += 1
            temp = temp.next
        return count

    def show_playlist(self):
        print("\nPlaylist:")
        if not self.head:
            print("(Empty)")
            return
        temp, pos = self.head, 1
        while temp:
            marker = "" if temp == self.current else ""
            print(f"{marker} {pos}. {temp.title}")
            temp, pos = temp.next, pos + 1

    def add_song_beginning(self, title):
        node = SongNode(title)
        node.next = self.head
        self.head = node
        if not self.current:
            self.current = node
        print(f"'{title}' added at the beginning.")

    def add_song_end(self, title):
        node = SongNode(title)
        if not self.head:
            self.head = self.current = node
        else:
            temp = self.head
            while temp.next:
                temp = temp.next
            temp.next = node
        print(f"'{title}' added at the end.")

    def add_song_at_position(self, title, pos):
        if pos < 1:
            print("Invalid position! Must be 1 or more.")
            return
        length = self.get_length()
        if pos > length + 1:
            print(f"Invalid position! Playlist has {length} song(s). Insert at 1 to {length + 1}.")
            return
        if pos == 1:
            self.add_song_beginning(title)
            return
        node = SongNode(title)
        temp = self.head
        for _ in range(pos - 2):
            temp = temp.next
        node.next = temp.next
        temp.next = node
        print(f"'{title}' inserted at position {pos}.")

    def search_song(self, title):
        temp, pos = self.head, 1
        while temp:
            if temp.title.lower() == title.lower():
                print(f"'{title}' found at position {pos}.")
                return
            temp, pos = temp.next, pos + 1
        print(f"'{title}' not found in the playlist.")

    def delete_song(self, title):
        temp, prev = self.head, None
        while temp:
            if temp.title.lower() == title.lower():
                if prev:
                    prev.next = temp.next
                else:
                    self.head = temp.next
                if temp == self.current:
                    self.current = self.head
                print(f"'{title}' deleted from the playlist.")
                return
            prev, temp = temp, temp.next
        print(f"Cannot delete. '{title}' not found.")

playlist = MusicPlaylist()

while True:
    print("\nMenu:\n1. Add Song\n2. Show Playlist\n3. Search Song\n4. Delete Song\n5. Exit")
    choice = input("Choose option: ")

    if choice == "1":
        title = input("Enter song title: ")
        print("Where to insert?\n1. Beginning\n2. End\n3. Specific Position")
        loc = input("Enter choice: ")
        if loc == "1":
            playlist.add_song_beginning(title)
        elif loc == "2":
            playlist.add_song_end(title)
        elif loc == "3":
            try:
                pos = int(input("Enter position: "))
                playlist.add_song_at_position(title, pos)
            except:
                print("Enter a valid number.")
        else:
            print("Invalid insertion choice.")

    elif choice == "2":
        playlist.show_playlist()
    elif choice == "3":
        playlist.search_song(input("Enter song to search: "))
    elif choice == "4":
        playlist.delete_song(input("Enter song to delete: "))
    elif choice == "5":
        print("Exiting Playlist.")
        break
    else:
        print("Invalid option.")
